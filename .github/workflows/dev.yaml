# port from https://github.com/juanfont/headscale/blob/main/.github/workflows/release.yml
---
name: dev-release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-dev-release:
    runs-on: ubuntu-latest
    permissions:
      actions: read       # To read the workflow path.
      id-token: write     # To sign the provenance.
      contents: write     # To add assets to a release.
      packages: write     # To push to the container registry.
      attestations: write # To generate an artifact attestation.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/rpki-client-web
            ghcr.io/${{ github.repository_owner }}/rpki-client-web
          tags: |
            type=raw,value=dev
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Attest
        uses: actions/attest-build-provenance@v2
        id: attest
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/rpki-client-web
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: true
